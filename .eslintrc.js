//To learn more about rules see https://eslint.org/docs/latest/rules/

const tabWidth = 2;
const fileWidth = 120;

module.exports = {
  env: {
    browser: true,
    es6: true
  },
  ignorePatterns: [
    ".eslintrc.js",
    "Pkg/**/Files/**/*.js",
    "Pkg/Darnytsia.Creatio/Schemas/**/*.js",
    "Autogenerated/src/*.js",
    "frontend/*.js",
  ],
  globals: {
    define: "readonly",
    require: "readonly",
    Terrasoft: "readonly",
    Ext: "readonly",
    EdenLab: "writable",
    Edenlab: "writable",
    EL: "writable"
  },
  extends: ["eslint:recommended"],
  parserOptions: {
    ecmaVersion: "latest",
    tsconfigRootDir: "frontend"
  },
  overrides: [{ files: ["*.js"] }],
  rules: {
    //#region Suggestions

    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "block-scoped-var": "error",
    camelcase: [
      "error",
      {
        properties: "always",
        ignoreDestructuring: false,
        ignoreImports: true,
        ignoreGlobals: true
      }
    ],
    "consistent-return": ["error"],
    curly: [
      "error",
      "all"
    ],
    "default-case": ["off"],
    "default-case-last": ["error"],
    "default-param-last": ["error"],
    eqeqeq: [
      "error",
      "always"
    ],
    "max-depth": [
      "error",
      4
    ],
    "max-params": "off",
    "multiline-comment-style": ["error"],
    "no-alert": ["error"],
    "no-bitwise": [
      "warn",
      {
        allow: ["~"],
        int32Hint: true
      }],
    "no-empty-function": ["error"],
    "no-eval": ["error"],
    "no-extend-native": ["error"],
    "no-extra-semi": "error",
    "no-floating-decimal": "error",
    "no-implied-eval": ["error"],
    "no-labels": "error",
    "no-lonely-if": ["error"],
    "no-negated-condition": ["error"],
    "no-nested-ternary": ["error"],
    "no-prototype-builtins": "off",
    "no-sequences": "error",
    "no-shadow": ["error"],
    "no-unused-vars": [
      "warn",
      {
        argsIgnorePattern: "^_",
        varsIgnorePattern: "^_",
        caughtErrorsIgnorePattern: "^_"
      }
    ],
    "no-useless-concat": ["error"],
    "no-var": ["error"],
    "no-warning-comments": ["error"],
    "operator-assignment": [
      "error",
      "always"
    ],
    "prefer-object-has-own": ["warn"],
    "prefer-object-spread": "off",
    "prefer-promise-reject-errors": ["error"],
    "prefer-rest-params": "off",
    "prefer-regex-literals": ["warn"],
    "prefer-spread": ["warn"],
    "prefer-template": ["warn"],
    "require-await": "error",
    "quote-props": [
      "error",
      "as-needed"
    ],
    "spaced-comment": [
      "warn",
      "never"
    ],
    yoda: [
      "error",
      "never"
    ],

    //#endregion

    //#region Layout & Formatting

    "array-bracket-newline": [
      "error",
      { multiline: true }
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "arrow-spacing": ["error"],
    "block-spacing": "error",
    "brace-style": [
      "error",
      "1tbs",
      { allowSingleLine: false }
    ],
    "comma-dangle": [
      "error",
      "never"
    ],
    "comma-spacing": ["error",
      {
        before: false,
        after: true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "computed-property-spacing": [
      "error",
      "never"
    ],
    "dot-location": [
      "error",
      "property"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "func-call-spacing": [
      "error",
      "never"
    ],
    "function-call-argument-newline": [
      "off",
      "consistent"
    ],
    indent: [
      "error",
      tabWidth,
      {
        SwitchCase: 1,
        VariableDeclarator: 1,
        outerIIFEBody: "off",
        MemberExpression: 1,
        FunctionDeclaration: { parameters: 1 },
        FunctionExpression: { parameters: 1 },
        CallExpression: { arguments: 1 },
        ArrayExpression: 1,
        ObjectExpression: 1,
        ImportDeclaration: 1,
        flatTernaryExpressions: false,
        offsetTernaryExpressions: false
      }
    ],
    "jsx-quotes": [
      "error",
      "prefer-double"
    ],
    "key-spacing": [
      "error",
      {
        beforeColon: false,
        afterColon: true,
        mode: "strict"
      }
    ],
    "keyword-spacing": [
      "error",
      {
        before: true,
        after: true
      }
    ],
    "max-len": [
      "error",
      { code: fileWidth }
    ],
    "new-parens": [
      "error",
      "always"
    ],
    "newline-per-chained-call": [
      "error",
      { ignoreChainWithDepth: 2 }
    ],
    "no-multi-spaces": ["error"],
    "no-multiple-empty-lines": [
      "error",
      { max: 1 }
    ],
    "no-trailing-spaces": [
      "error",
      {
        skipBlankLines: false,
        ignoreComments: true
      }
    ],
    "no-whitespace-before-property": ["error"],
    "object-curly-newline": [
      "error",
      { consistent: true }
    ],
    "object-curly-spacing": [
      "error",
      "always",
      {
        arraysInObjects: false,
        objectsInObjects: true
      }
    ],
    "object-property-newline": ["error"],
    "operator-linebreak": [
      "error",
      "after",
      {
        overrides: {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      "error",
      {
        blocks: "never",
        classes: "never"
      }
    ],
    quotes: [
      "error",
      "double"
    ],
    "rest-spread-spacing": [
      "error",
      "never"
    ],
    semi: [
      "error",
      "always"
    ],
    "semi-spacing": [
      "error",
      {
        before: false,
        after: true
      }
    ],
    "semi-style": [
      "error",
      "last"
    ],
    "space-before-blocks": ["error"],
    "space-before-function-paren": [
      "error",
      "never"
    ],
    "space-in-parens": ["error"],
    "space-infix-ops": ["error"],
    "space-unary-ops": [
      "error",
      {
        words: true,
        nonwords: false,
        overrides: {
          "+": true,
          "-": true
        }
      }
    ],
    "switch-colon-spacing": [
      "error",
      {
        after: true,
        before: false
      }
    ],
    "template-curly-spacing": ["error"]

    //#endregion
  }
};
